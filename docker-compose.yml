version: '2.0'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: cloudsigma.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
      - ./php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.32
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel_web
      MYSQL_USER: convertedIn
      MYSQL_PASSWORD: P@ssword
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  db_testing:
    image: mysql:5.7.32
    container_name: db_testing
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: test_database
      MYSQL_USER: convertedIn
      MYSQL_PASSWORD: P@ssword
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_testing
    volumes:
      - dbdata_testing:/var/lib/mysql/
      - ./mysql/db_testing.cnf:/etc/mysql/conf.d/db_testing.cnf
    networks:
      - app-network

#adminer
  adminer:
    image: adminer:latest
    restart: always
    container_name: adminer
    environment:
      ADMINER_PLUGINS: 'tables-filter tinymce'
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - db

# Redis
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      -  app-network
#Docker Networks
networks:
  app-network:
    driver: bridge

#volumes
volumes:
  dbdata:
  dbdata_testing:
    driver: local